// Block definition (there may be more than one block per file)
FUNCTION_BLOCK tipper

// Define input variables
VAR_INPUT
    posture : REAL;
    time : REAL;
    xposition : REAL;
    yposition : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    status : REAL;
END_VAR

// Fuzzify input variable 'posture'
FUZZIFY posture
    TERM laying := 1 ;
    TERM standing := 0;
    TERM sitting := 3;
    TERM bending := 2;
END_FUZZIFY

// Fuzzify input variable 'time'
FUZZIFY time
    TERM day := gbell 6 10 14  ;
    TERM night1 := gbell 6 10 2;
    TERM night2 := gbell 6 10 26;
END_FUZZIFY

// Fuzzify input variable 'time'
FUZZIFY xposition
    TERM good := gauss 591 30 ;
END_FUZZIFY

// Fuzzify input variable 'time'
FUZZIFY yposition
    TERM good := gauss 441 30 ;
END_FUZZIFY


// Defzzzify output variable 'status'
DEFUZZIFY status
    TERM bad := gauss 4 1;
    TERM good := gauss 6 1;
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    OR : MAX;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF (posture IS laying OR posture IS sitting) AND (NOT xposition IS good) OR (NOT yposition IS good)
                THEN status IS bad;

    RULE 2 : IF (posture IS laying OR posture IS sitting) AND (xposition IS good) AND (yposition IS good)
                THEN status IS good;

    RULE 3 : IF posture IS laying AND time IS day
                THEN status IS bad;

    RULE 4 : IF posture IS standing AND time IS day
                THEN status is good;

    RULE 5 : IF posture IS sitting AND (time IS night1 OR time IS night2)
                    THEN status is bad;

    RULE 6  : IF posture IS bending AND (time IS night1 OR time IS night2)
                    THEN status is bad;
END_RULEBLOCK

END_FUNCTION_BLOCK